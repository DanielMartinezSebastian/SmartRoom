generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Product {
  id          String        @id @default(uuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  category    String?
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  Purchase    Purchase[]
  RoomProduct RoomProduct[]

  @@index([category])
  @@index([isActive])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Purchase {
  id         String         @id @default(uuid())
  userId     String
  productId  String
  quantity   Int            @default(1)
  totalPrice Float
  status     PurchaseStatus @default(PENDING)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @default(now())
  Product    Product        @relation(fields: [productId], references: [id])
  User       User           @relation(fields: [userId], references: [id])

  @@index([createdAt])
  @@index([productId])
  @@index([status])
  @@index([userId])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Room {
  id          String        @id @default(uuid())
  name        String
  description String?
  capacity    Int           @default(1)
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  RoomProduct RoomProduct[]
  User        User[]

  @@index([isActive])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model RoomProduct {
  id        String        @id @default(uuid())
  roomId    String
  productId String
  status    ProductStatus @default(AVAILABLE)
  stock     Int           @default(0)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now())
  Product   Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  Room      Room          @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([roomId, productId])
  @@index([productId])
  @@index([roomId])
  @@index([status])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String?
  role       UserRole   @default(CLIENT)
  supabaseId String     @unique
  roomId     String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  Purchase   Purchase[]
  Room       Room?      @relation(fields: [roomId], references: [id])

  @@index([email])
  @@index([roomId])
  @@index([supabaseId])
}

enum ProductStatus {
  AVAILABLE
  UNAVAILABLE
  OUT_OF_STOCK
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum UserRole {
  ADMIN
  WORKER
  CLIENT
}
